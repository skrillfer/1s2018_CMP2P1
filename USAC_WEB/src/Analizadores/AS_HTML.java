
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Fri Feb 09 22:37:36 CST 2018
//----------------------------------------------------

package Analizadores;

import Estructuras.*;
import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import Errores.Erro_r;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Fri Feb 09 22:37:36 CST 2018
  */
public class AS_HTML extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public AS_HTML() {super();}

  /** Constructor which sets the default scanner. */
  public AS_HTML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public AS_HTML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\011\000\002\002\004\000\002\002\003\000\002\003" +
    "\011\000\002\004\004\000\002\004\003\000\002\005\011" +
    "\000\002\006\010\000\002\007\011\000\002\010\010" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\050\000\004\075\006\001\002\000\004\002\052\001" +
    "\002\000\004\002\000\001\002\000\004\027\007\001\002" +
    "\000\004\074\010\001\002\000\004\075\012\001\002\000" +
    "\004\075\ufffd\001\002\000\006\030\036\031\017\001\002" +
    "\000\004\075\033\001\002\000\004\075\016\001\002\000" +
    "\004\075\ufffe\001\002\000\004\031\017\001\002\000\004" +
    "\074\020\001\002\000\004\075\022\001\002\000\004\075" +
    "\030\001\002\000\004\034\023\001\002\000\004\074\024" +
    "\001\002\000\004\075\025\001\002\000\004\057\026\001" +
    "\002\000\004\074\027\001\002\000\004\075\ufff9\001\002" +
    "\000\004\054\031\001\002\000\004\074\032\001\002\000" +
    "\004\075\ufffa\001\002\000\004\052\034\001\002\000\004" +
    "\074\035\001\002\000\004\002\uffff\001\002\000\004\074" +
    "\037\001\002\000\004\075\041\001\002\000\004\075\047" +
    "\001\002\000\004\032\042\001\002\000\004\074\043\001" +
    "\002\000\004\075\044\001\002\000\004\055\045\001\002" +
    "\000\004\074\046\001\002\000\004\075\ufffb\001\002\000" +
    "\004\053\050\001\002\000\004\074\051\001\002\000\004" +
    "\075\ufffc\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\050\000\006\002\003\003\004\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\004\012\005\013\007\010\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\014" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\010\020\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\037\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$AS_HTML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$AS_HTML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$AS_HTML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$AS_HTML$actions {


    //se declaran variables globales etc.
    //GestorC3D gs = new GestorC3D();
    

  private final AS_HTML parser;

  /** Constructor */
  CUP$AS_HTML$actions(AS_HTML parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$AS_HTML$do_action(
    int                        CUP$AS_HTML$act_num,
    java_cup.runtime.lr_parser CUP$AS_HTML$parser,
    java.util.Stack            CUP$AS_HTML$stack,
    int                        CUP$AS_HTML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$AS_HTML$result;

      /* select the action based on the action number */
      switch (CUP$AS_HTML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // contenidocuerpo ::= MENQ ITEXTO MAYQ MENQ FTEXTO MAYQ 
            {
              Nodo RESULT =null;

              CUP$AS_HTML$result = parser.getSymbolFactory().newSymbol("contenidocuerpo",6, ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-5)), ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), RESULT);
            }
          return CUP$AS_HTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // cuerpo ::= MENQ ICUERPO MAYQ contenidocuerpo MENQ FCUERPO MAYQ 
            {
              Nodo RESULT =null;

              CUP$AS_HTML$result = parser.getSymbolFactory().newSymbol("cuerpo",5, ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-6)), ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), RESULT);
            }
          return CUP$AS_HTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // contenidoencabezado ::= MENQ ITITULO MAYQ MENQ FTITULO MAYQ 
            {
              Nodo RESULT =null;

              CUP$AS_HTML$result = parser.getSymbolFactory().newSymbol("contenidoencabezado",4, ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-5)), ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), RESULT);
            }
          return CUP$AS_HTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // encabezado ::= MENQ IENCABEZADO MAYQ contenidoencabezado MENQ FENCABEZADO MAYQ 
            {
              Nodo RESULT =null;

              CUP$AS_HTML$result = parser.getSymbolFactory().newSymbol("encabezado",3, ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-6)), ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), RESULT);
            }
          return CUP$AS_HTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // contenidohtml ::= cuerpo 
            {
              Nodo RESULT =null;

              CUP$AS_HTML$result = parser.getSymbolFactory().newSymbol("contenidohtml",2, ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), RESULT);
            }
          return CUP$AS_HTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // contenidohtml ::= encabezado cuerpo 
            {
              Nodo RESULT =null;

              CUP$AS_HTML$result = parser.getSymbolFactory().newSymbol("contenidohtml",2, ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-1)), ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), RESULT);
            }
          return CUP$AS_HTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // raiz ::= MENQ IHTML MAYQ contenidohtml MENQ FHTML MAYQ 
            {
              Nodo RESULT =null;

              CUP$AS_HTML$result = parser.getSymbolFactory().newSymbol("raiz",1, ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-6)), ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), RESULT);
            }
          return CUP$AS_HTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // programa ::= raiz 
            {
              Nodo RESULT =null;

              CUP$AS_HTML$result = parser.getSymbolFactory().newSymbol("programa",0, ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), RESULT);
            }
          return CUP$AS_HTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= programa EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-1)).right;
		Nodo start_val = (Nodo)((java_cup.runtime.Symbol) CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-1)).value;
		RESULT = start_val;
              CUP$AS_HTML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.elementAt(CUP$AS_HTML$top-1)), ((java_cup.runtime.Symbol)CUP$AS_HTML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$AS_HTML$parser.done_parsing();
          return CUP$AS_HTML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

